name: Unittest

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python with Conda ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v3
      with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ 'x86_64' }}
          miniforge-version: latest
          use-mamba: true
          mamba-version: "*"
          activate-environment: fiesta_env
                  
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install pytest pytest-cov pytest-aiohttp sqlparse freezegun PyJWT coveralls dill
        python -m pip install .
        ls -lah /home/runner/.local/lib/python3.12/site-packages/fiesta/
        ls -lah /home/runner/.local/lib/python3.12/site-packages/fiesta/surrogates

    - name: Perform tests with pytest
      run: |
          python -m coverage run --source fiesta -m pytest tests/*.py
